# Not exactly the same as SRResNet in <Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network>
# With 16 Residual blocks w/o BN

#### general settings
name: Corrector_x4
use_tb_logger: true
model: corrector
distortion: sr
scale: 4
gpu_ids: [0, 1]
step: 7
kernel_size: 21
code_length: 10
sig_min: 0.2
sig_max: 4.0
sig: 2.6

#### datasets
datasets:
  train:
    name: DIV2K
    mode: LQGTker
    dataroot_GT: /mnt/yjchai/SR_data/Flickr2K_train/HR/x4
    dataroot_LQ: ~

    use_shuffle: true
    n_workers: 8  # per GPU
    batch_size: 32
    GT_size: 256
    LR_size: 64
    use_flip: true
    use_rot: true
    color: RGB
  val:
    name: DIV2K
    mode: LQGTker
    dataroot_GT: /mnt/yjchai/SR_data/DIV2K_test/HR/x4
    dataroot_LQ: ~

#### network structures
network_G:
  which_model_G: Corrector
  in_nc: 3
  out_nc: 3
  nf: 64
  nb: 16
  upscale: 4
  code_length: 10

#### path
path:
  pretrain_model_G: ~
  strict_load: true
  resume_state: ~

#### training settings: learning rate scheme, loss
train:
  lr_G: !!float 1e-4
  lr_scheme: ~
  beta1: 0.9
  beta2: 0.99
  niter: 5000
  warmup_iter: -1  # no warm up
  T_period: ~ #[250000, 250000, 250000, 250000]
  restarts: ~ #[250000, 500000, 750000]
  restart_weights: ~ #[1, 1, 1]
  eta_min: !!float 1e-7

  pixel_criterion: l2
  pixel_weight: 1.0

  manual_seed: 0
  val_freq: 5000 #!!float 5e3

#### logger
logger:
  print_freq: 10
  save_checkpoint_freq: 100
